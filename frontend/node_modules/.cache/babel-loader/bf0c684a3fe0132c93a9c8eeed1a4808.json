{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Base\\\\Documents\\\\udemy_p1\\\\feedback-app\\\\src\\\\components\\\\FeedbackStats.jsx\",\n    _s = $RefreshSig$();\n\n// import PropTypes from 'prop-types'\nimport { useContext } from 'react';\nimport FeedbackContext from './context/FeedbackContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FeedbackStats() {\n  _s();\n\n  const {\n    feedback\n  } = useContext(FeedbackContext);\n  let average = feedback.reduce((acc, cur) => {\n    return acc + cur.rating;\n  }, 0) / feedback.length;\n  average = average.toFixed(1).replace(/[.,]0$/, '');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" Average Rating: \", isNaN(average) ? 0 : average, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n} // FeedbackStats.propTypes = {\n//     feedback: PropTypes.array.isRequired\n// }\n\n\n_s(FeedbackStats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n\n_c = FeedbackStats;\nexport default FeedbackStats;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["useContext","FeedbackContext","FeedbackStats","feedback","average","reduce","acc","cur","rating","length","toFixed","replace","isNaN"],"sources":["C:/Users/Base/Documents/udemy_p1/feedback-app/src/components/FeedbackStats.jsx"],"sourcesContent":["// import PropTypes from 'prop-types'\r\nimport { useContext } from 'react'\r\nimport FeedbackContext from './context/FeedbackContext'\r\n\r\nfunction FeedbackStats () {\r\n    const { feedback } = useContext(FeedbackContext)\r\n\r\n    let average = feedback.reduce((acc, cur) => {\r\n        return acc + cur.rating\r\n    }, 0) / feedback.length\r\n\r\n    average = average.toFixed(1).replace(/[.,]0$/,'')\r\n\r\n    return (\r\n        <div className = 'feedback-stats'>\r\n        <h4>{feedback.length} Reviews</h4>\r\n        <h4> Average Rating: {isNaN(average) ? 0 : average} </h4>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n// FeedbackStats.propTypes = {\r\n//     feedback: PropTypes.array.isRequired\r\n// }\r\nexport default FeedbackStats"],"mappings":";;;AAAA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;AAEA,SAASC,aAAT,GAA0B;EAAA;;EACtB,MAAM;IAAEC;EAAF,IAAeH,UAAU,CAACC,eAAD,CAA/B;EAEA,IAAIG,OAAO,GAAGD,QAAQ,CAACE,MAAT,CAAgB,CAACC,GAAD,EAAMC,GAAN,KAAc;IACxC,OAAOD,GAAG,GAAGC,GAAG,CAACC,MAAjB;EACH,CAFa,EAEX,CAFW,IAENL,QAAQ,CAACM,MAFjB;EAIAL,OAAO,GAAGA,OAAO,CAACM,OAAR,CAAgB,CAAhB,EAAmBC,OAAnB,CAA2B,QAA3B,EAAoC,EAApC,CAAV;EAEA,oBACI;IAAK,SAAS,EAAG,gBAAjB;IAAA,wBACA;MAAA,WAAKR,QAAQ,CAACM,MAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,eAEA;MAAA,gCAAsBG,KAAK,CAACR,OAAD,CAAL,GAAiB,CAAjB,GAAqBA,OAA3C;IAAA;MAAA;MAAA;MAAA;IAAA,QAFA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH,C,CAGD;AACA;AACA;;;GApBSF,a;;KAAAA,a;AAqBT,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}